<?xml version="1.0"  encoding="UTF-8" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:security="http://symfony.com/schema/dic/security"
           xmlns:jms="http://example.org/schema/dic/jms_security_extra"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <!--
        jms_security_extra:
            secure_all_services: false
            expressions: true
    -->
    <jms:jms_security_extra secure_all_services="false" expressions="true"/>

    <security:config>
        <!--
            security:
                encoders:
                    #Symfony\Component\Security\Core\User\User: plaintext
                    FOS\UserBundle\Model\UserInterface: sha512
        -->
        <security:encoder class="FOS\UserBundle\Model\UserInterface" algorithm="sha512"/>

        <!--
                role_hierarchy:
                    ROLE_ADMIN:       ROLE_USER
                    ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        -->
        <security:role id="ROLE_ADMIN">ROLE_USER</security:role>
        <security:role id="ROLE_SUPER_ADMIN">ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH</security:role>

        <!--
                providers:
                    #in_memory:
                    #    memory:
                    #        users:
                    #            user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                    #            admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
                    fos_userbundle:
                        id: fos_user.user_provider.username
        -->
        <!--security:provider name="in_memory">
            <security:memory>
                <security:user name="user" password="userpass" roles="ROLE_USER"/>
                <security:user name="admin" password="adminpass" roles="ROLE_ADMIN"/>
            </security:memory>
        </security:provider-->
        <security:provider name="fos_userbundle" id="fos_user.user_provider.username"/>

        <!--
                firewalls:
                    dev:
                        pattern:  ^/(_(profiler|wdt)|css|images|js)/
                        security: false

                    login:
                        pattern:  ^/demo/secured/login$
                        security: false

                    secured_area:
                        pattern:    ^/demo/secured/
                        #form_login:
                        #    check_path: _security_check
                        #    login_path: _demo_login
                        #logout:
                        #    path:   _demo_logout
                        #    target: _demo
                        #anonymous: ~
                        #http_basic:
                        #    realm: "Secured Demo Area"
                    main:
                        pattern: ^/
                        form_login:
                            provider: fos_userbundle
                            csrf_provider: form.csrf_provider
                        logout:       true
                        anonymous:    true
        -->
        <!--security:firewall name="dev" pattern="^/(_(profiler|wdt)|css|images|js)/" security="false"/>
        <security:firewall name="login" pattern="^/demo/secured/login$" security="false"/>
        <security:firewall name="secured_area" pattern="^/demo/secured/">
            <security:form_login check_path="_security_check" login_path="_demo_login"/>
            <security:logout path="_demo_logout" target="_demo"/>
            <security:anonymous/>
            <security:http_basic realm="Secured Demo Area" />
        </security:firewall-->
        <security:firewall name="secured_area" pattern="^/">
            <security:form_login provider="fos_userbundle" csrf_provider="form.csrf_provider"/>
            <security:logout/>
            <security:anonymous/>
        </security:firewall>

        <!--
                access_control:
                    #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
                    - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
                    - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
                    - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
                    - { path: ^/admin/, role: ROLE_ADMIN }
        -->
        <!--security:rule path="^/login" role="IS_AUTHENTICATED_ANONYMOUSLY" required_channel="https" /-->
        <security:rule path="^/login$" role="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:rule path="^/register" role="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:rule path="^/resetting" role="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:rule path="^/admin/" role="ROLE_ADMIN"/>

    </security:config>
</container>